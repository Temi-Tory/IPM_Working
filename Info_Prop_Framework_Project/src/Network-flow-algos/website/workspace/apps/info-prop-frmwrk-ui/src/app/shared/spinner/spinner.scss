// Spinner component specific styles
// Uses CSS custom properties from global styles.scss

.spinner-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.6);
  z-index: var(--z-index-spinner);
  display: flex;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(3px);
  -webkit-backdrop-filter: blur(3px);
  animation: fadeInOverlay var(--transition-normal) ease-out;
  
  // Ensure overlay blocks all pointer events except for its children
  pointer-events: all;
  
  // Focus styles for accessibility
  &:focus {
    outline: none;
  }
  
  // Prevent text selection
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.spinner-container {
  background: white;
  border-radius: var(--border-radius-lg);
  padding: 2rem;
  box-shadow: var(--shadow-xl);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;
  min-width: 240px;
  max-width: 90vw;
  max-width: min(400px, 90vw);
  position: relative;
  animation: slideInSpinner var(--transition-normal) ease-out;
  
  // Ensure container allows pointer events
  pointer-events: all;
  
  // Focus styles
  &:focus {
    outline: 2px solid var(--primary-purple);
    outline-offset: 2px;
  }
  
  // Responsive design
  @media (max-width: 480px) {
    padding: 1.5rem;
    min-width: 200px;
    gap: 1rem;
  }
}

.spinner-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;
  width: 100%;
  
  // Material spinner customization
  mat-progress-spinner {
    // Custom color override if needed
    ::ng-deep circle {
      stroke: var(--primary-purple);
    }
  }
}

.spinner-text {
  font-size: 1rem;
  font-weight: 500;
  color: #555;
  text-align: center;
  margin: 0;
  line-height: 1.4;
  max-width: 100%;
  word-wrap: break-word;
  
  @media (max-width: 480px) {
    font-size: 0.9rem;
  }
}

.spinner-cancel-btn {
  margin-top: 0.5rem;
  min-width: 120px;
  height: 40px;
  border-radius: var(--border-radius-md);
  font-weight: 500;
  text-transform: none;
  
  // Custom styling for cancel button
  &.mat-mdc-raised-button {
    box-shadow: var(--shadow-md);
    
    &:hover {
      box-shadow: var(--shadow-lg);
      transform: translateY(-1px);
    }
    
    &:active {
      transform: translateY(0);
      box-shadow: var(--shadow-sm);
    }
  }
  
  // Icon spacing
  mat-icon {
    margin-right: 0.5rem;
    font-size: 1.2rem;
    width: 1.2rem;
    height: 1.2rem;
  }
  
  @media (max-width: 480px) {
    min-width: 100px;
    height: 36px;
    font-size: 0.9rem;
    
    mat-icon {
      font-size: 1rem;
      width: 1rem;
      height: 1rem;
      margin-right: 0.25rem;
    }
  }
}

// Animations
@keyframes fadeInOverlay {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideInSpinner {
  from {
    opacity: 0;
    transform: scale(0.9) translateY(-20px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

// Multiple spinner support - stack them with slight offset
.spinner-overlay:nth-child(n+2) {
  .spinner-container {
    transform: scale(0.95) translateX(10px) translateY(10px);
    opacity: 0.9;
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  .spinner-overlay {
    background-color: rgba(0, 0, 0, 0.8);
  }
  
  .spinner-container {
    border: 2px solid #000;
  }
  
  .spinner-text {
    color: #000;
    font-weight: 600;
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  .spinner-overlay,
  .spinner-container {
    animation: none;
  }
  
  .spinner-cancel-btn {
    &:hover {
      transform: none;
    }
    
    &:active {
      transform: none;
    }
  }
}

// Dark theme support (if implemented)
@media (prefers-color-scheme: dark) {
  .spinner-container {
    background: #2d2d2d;
    color: white;
  }
  
  .spinner-text {
    color: #e0e0e0;
  }
}